version: "3.8"

services:
  quilt-server:
    build: 
      dockerfile: Containerfile
      args:
        # Change this to the minecraft version you want a server for!
        MINECRAFT_VERSION: "1.20.4"

    # limit the resources that can be used by the server!
    deploy:
      resources:
        limits:
          cpus: 6
          memory: 4g
          pids: 1

    ports:
      # Open default port for minecraft server
      - "25565:25565"

    volumes:
      # Needs Z on Fedora because of SELinux, see 
      # <https://docs.podman.io/en/latest/markdown/podman-run.1.html#volume-v-source-volume-host-dir-container-dir-options>
      # Labeling Volume Mounts

      # Code!
      ## *Must* be read only so attackers can't inject new code
      ## Still mounted on the host so you can add new mods, but the server
      ## itself can't add or modify them. Validate any mods you add!
      ## All other jar files are either in the Docker file as readonly,
      ## or in .cache which is only read in the beginning and is reset on each
      ## restart
      - ./data/mods:/data/mods:ro,Z

      # Configuration
      ## Ideally we don't want the server to write to this,
      ## only should be able to change this outside
      - ./data/eula.txt:/data/eula.txt:ro,Z

      ## This can safely be set to readonly, but you will get an error
      ## saying "Failed to store properties to file: server.properties"
      ## By default, went with rw so this error doesn't pop up
      - ./data/server.properties:/data/server.properties:rw,Z

      ## Mods will add new config files here so they need to be able to write.
      ## This can be set to readonly once you've added all mods.
      - ./data/config:/data/config:rw,Z

      # Server data
      ## Server must be able to write to these to operate
      - ./data/crash-reports:/data/crash-reports:rw,Z
      - ./data/logs:/data/logs:rw,Z
      - ./data/world:/data/world:rw,Z
      - ./data/banned-ips.json:/data/banned-ips.json:rw,Z
      - ./data/banned-players.json:/data/banned-players.json:rw,Z
      - ./data/ops.json:/data/ops.json:rw,Z
      - ./data/usercache.json:/data/usercache.json:rw,Z
      - ./data/whitelist.json:/data/whitelist.json:rw,Z

    # Allow us to attach to the container later
    stdin_open: true
    tty: true

    # Protect our entry jar from modification
    read_only: true

    # Places the server must be able to write to, but doesn't persist
    tmpfs:
      # Java writes and executes from /tmp
      - /tmp:size=10M,mode=0770,nosuid,nodev
      - /data/.cache:size=100M,mode=0770,noexec,nosuid,nodev

    # Drop all capabilities since we don't need them!
    cap_drop:
      - ALL

    # Give it an hour to finish saving the world before quitting
    stop_grace_period: 60m
